<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">

  <!-- Provide the propeller mesh in a separate file with the rotation axis
  over propeller's frame X-axis in DAE (Collada) or STL format.
-->
<!-- <xacro:property name="prop_mesh_file" value="file://$(find uuv_descriptions_example)/models/rov_example/mesh/propeller.dae"/> -->

<!-- Thruster macro with integration of joint and link-->
<xacro:macro name="thruster_macro" params="robot_namespace thruster_id *origin">

    <!--
    Dummy link as place holder for the thruster frame,
    since thrusters can often be inside the collision geometry
    of the vehicle and may cause internal collisions if set otherwise
-->
<link name="${robot_namespace}/thruster_${thruster_id}">

      <!-- <visual>
        <geometry>
          <mesh filename="${prop_mesh_file}" scale=".25 .25 .25" />
        </geometry>
    </visual> -->

    <inertial>
    	<mass value="0.001" />
    	<origin xyz="0 0 0" rpy="0 0 0"/>
    	<inertia ixx="0.000000017" ixy="0.0" ixz="0.0"
    		iyy="0.000000017" iyz="0.0"
    		izz="0.000000017" />
    	</inertial>
    </link>

    <!-- Joint between thruster link and vehicle base link -->
    <joint name="${robot_namespace}/thruster_${thruster_id}_joint" type="continuous">
      <xacro:insert_block name="origin" />
      <axis xyz="0 0 1" />
      <parent link="${robot_namespace}/base_link" />
      <child link="${robot_namespace}/thruster_${thruster_id}" />
  </joint>

  <gazebo>
   <!-- Thruster ROS plugin -->
   <plugin name="${robot_namespace}_${thruster_id}_thruster_model" filename="libthruster_ros_plugin.so">
      <!-- Name of the thruster link -->
      <linkName>${robot_namespace}/thruster_${thruster_id}</linkName>

      <!-- Name of the joint between thruster and vehicle base link -->
      <jointName>${robot_namespace}/thruster_${thruster_id}_joint</jointName>

      <thrusterID>${thruster_id}</thrusterID>

      <!-- Thruster force output topic name -->
      <thrustTopic>${robot_namespace}/thrusters/${thruster_id}/thrust</thrustTopic>

      <!-- Thruster commmand input topic name -->
      <inputTopic>${robot_namespace}/thrusters/${thruster_id}/input</inputTopic>

      <!-- Gain of the input command signal -->
      <gain>1</gain>

      <!-- Maximum allowed input value for the input signal for thruster unit -->
      <clampMax>2</clampMax>

      <!-- Minimum allowed value for the input signal for thruster unit -->
      <clampMin>0</clampMin>

      <thrust_efficiency>1</thrust_efficiency>

      <propeller_efficiency>1</propeller_efficiency>

      <dynamics>
          <type>FirstOrder</type>
          <timeConstant>0.05</timeConstant>
      </dynamics>

      <conversion>
         <type>Basic</type>
         <rotorConstant>0.00031</rotorConstant>
     </conversion>

 </plugin>
</gazebo>

<gazebo reference="${robot_namespace}/thruster_${thruster_id}">
   <selfCollide>false</selfCollide>
</gazebo>
</xacro:macro>

</robot>